// версия gradle для образца

plugins {
    id 'java-library'
    id "io.qameta.allure" version "2.9.6"
}

repositories {
    mavenCentral()
}
def allureVersion = "2.17.3",
    selenideVersion = "6.3.4",
    junitVersion = "5.8.2",
    slf4jVersion = "1.7.32"

allure {
    adapter {
        aspectjWeaver.set(true)
        frameworks {
            junit5 {
                adapterVersion.set(allureVersion)
            }
        }
    }
    report {
        version.set(allureVersion)
    }
}

dependencies {
    testImplementation(
            "com.codeborne:selenide:$selenideVersion",
            "io.qameta.allure:allure-selenide:$allureVersion",
            "org.junit.jupiter:junit-jupiter-api:$junitVersion")
    testRuntimeOnly(
            "org.slf4j:slf4j-simple:$slf4jVersion",
            "org.junit.jupiter:junit-jupiter-engine:$junitVersion")
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}


tasks.withType(Test) {
    systemProperties(System.getProperties())
    useJUnitPlatform()

    testLogging {
        lifecycle {
            events "started", "skipped", "failed", "standard_error", "standard_out"
            exceptionFormat "short"
        }
    }
}

/* этот блок необходим для аннатации @Tag. Если запустим тесты командой: gradle clean properties_test -DsomeText=Hello
   то выполнятся только тесты перед которыми есть аннотация @Tag.
   Аннотацию @Tag можно применить как к классу, в котором может быть много тестов, так и к отдельному тесту
 */

task properties_test(type: Test) {
    useJUnitPlatform {
        includeTags "properties"
    }
}

task smoke_test(type: Test) {
    useJUnitPlatform {
        includeTags "smoke"
        // есть еще excludedTags - это те тесты которые мы хотим исключить
    }
}